# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

deploy-staging:
    stage: deploy
    environment: staging
    before_script:
      ## Install ssh-agent if not already installed, it is required by Docker.
      ## (change apt-get to yum if you use an RPM-based image)
      ##
      - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    
      ##
      ## Run ssh-agent (inside the build environment)
      ##
      - eval $(ssh-agent -s)
    
      ##
      ## Create the SSH directory and give it the right permissions
      ##
      - mkdir -p ~/.ssh
      - chmod 755 ~/.ssh
      
      ##
      ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
      ## We're using tr to fix line endings which makes ed25519 keys work
      ## without extra base64 encoding.
      ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
      ##
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      #- echo "$SSH_PRIVATE_KEY" | ssh-add -
    
      ##
      ## Optionally, if you will be using any Git commands, set the user name and
      ## and email
      ##
      # - git config --global user.email "user@example.com"
      # - git config --global user.name "User name"
    script:
      - >
        ssh ubuntu@$DEPLOY_SERVER
        "pwd;
        cd $REPO_DIR_PATH;
        git stash;
        git fetch origin $CI_BRANCH;
        git checkout $CI_BRANCH;
        git stash;
        git pull origin $CI_BRANCH;
        npm install;
        npm run pm2-staging" .
    only:
      variables:
        # trigger pipeline only for $CI_BRANCH
        - $CI_BRANCH == "staging"
